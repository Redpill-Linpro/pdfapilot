<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- Global properties used in property expansion throughout the container, overridable via JNDI or System properties -->
  <bean name="global-properties" class="org.alfresco.config.JndiPropertiesFactoryBean">
    <property name="locations">
      <list>
        <value>classpath:alfresco-global.properties</value>
      </list>
    </property>
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
  </bean>

  <bean name="common-placeholder-configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" abstract="true">
    <property name="valueSeparator">
      <null />
    </property>
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="searchSystemEnvironment" value="false" />
  </bean>

  <!-- Expand global properties and version information in bean definitions -->
  <bean name="repository-properties" parent="common-placeholder-configurer">
    <property name="properties" ref="global-properties" />
    <!-- Do not allow version information to be overriden -->
    <property name="localOverride" value="false" />
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_NEVER" />
    <!-- Order before shared-properties to give you a chance to override its parameters here -->
    <property name="order" value="6" />
  </bean>

  <!-- This is a mocked MimetypeService -->
  <bean name="MimetypeService" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="target">
      <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.alfresco.service.cmr.repository.MimetypeService" />
      </bean>
    </property>
    <property name="proxyInterfaces">
      <value>org.alfresco.service.cmr.repository.MimetypeService</value>
    </property>
  </bean>

  <!-- This is a mocked NodeService -->
  <bean name="NodeService" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="target">
      <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.alfresco.service.cmr.repository.NodeService" />
      </bean>
    </property>
    <property name="proxyInterfaces">
      <value>org.alfresco.service.cmr.repository.NodeService</value>
    </property>
  </bean>

  <!-- This is a mocked MimetypeService -->
  <bean name="metadata-writer.contentFactory" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="target">
      <bean class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.redpill.alfresco.module.metadatawriter.factories.MetadataContentFactory" />
      </bean>
    </property>
    <property name="proxyInterfaces">
      <value>org.redpill.alfresco.module.metadatawriter.factories.MetadataContentFactory</value>
    </property>
  </bean>

  <bean id="metadataExtracterRegistry" class="org.mockito.Mockito" factory-method="mock">
    <constructor-arg value="org.alfresco.repo.content.metadata.MetadataExtracterRegistry" />
  </bean>

  <bean name="transformer.worker.PdfaPilot" class="org.redpill.alfresco.repo.content.transform.PdfaPilotContentTransformerWorker" parent="transformer.worker.abstractPdfaPilot">
    <property name="mimetypeService" ref="MimetypeService" />
    <property name="enabled" value="true" />
  </bean>

</beans>
